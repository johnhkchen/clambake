name: Property-Based Tests

on:
  push:
    branches: [ main, agent001/* ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  property-tests:
    name: Agent Coordination Property Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
    
    - name: Cache Cargo dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    
    - name: Check formatting
      run: cargo fmt --all -- --check
    
    - name: Run Clippy
      run: cargo clippy --all-targets --all-features -- -D warnings
    
    - name: Build tests
      run: cargo build --tests
    
    - name: Run unit tests
      run: cargo test --lib
    
    - name: Run property-based tests
      run: cargo test --test property_based_agent_coordination
      env:
        # Run property tests with higher iteration count for CI
        PROPTEST_CASES: 1000
        PROPTEST_MAX_SHRINK_ITERS: 10000
    
    - name: Run chaos testing
      run: cargo test --test property_based_agent_coordination chaos_testing::
    
    - name: Run integration property tests
      run: cargo test --test property_based_agent_coordination integration_property_tests::
      continue-on-error: true  # Allow failure if GitHub credentials not available
    
    - name: Run all coordination tests
      run: cargo test agent_coordination_test
      continue-on-error: true  # Allow failure if GitHub credentials not available

  coverage:
    name: Test Coverage
    runs-on: ubuntu-latest
    needs: property-tests
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        components: llvm-tools-preview
    
    - name: Install cargo-llvm-cov
      uses: taiki-e/install-action@cargo-llvm-cov
    
    - name: Cache Cargo dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-coverage-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Generate coverage report
      run: cargo llvm-cov --test property_based_agent_coordination --lcov --output-path coverage.lcov
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: coverage.lcov
        flags: property-tests
        name: property-based-tests
        fail_ci_if_error: false

  benchmark:
    name: Property Test Performance
    runs-on: ubuntu-latest
    needs: property-tests
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
    
    - name: Cache Cargo dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-bench-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Run property test benchmarks
      run: |
        echo "ðŸš€ Running property test performance benchmarks..."
        
        # Test with different scale factors
        echo "ðŸ“Š Testing with 100 cases..."
        time PROPTEST_CASES=100 cargo test --test property_based_agent_coordination --release -- --nocapture
        
        echo "ðŸ“Š Testing with 500 cases..."
        time PROPTEST_CASES=500 cargo test --test property_based_agent_coordination --release -- --nocapture
        
        echo "ðŸ“Š Testing concurrent operations at scale..."
        time cargo test --test property_based_agent_coordination prop_concurrent_safety --release -- --nocapture
    
    - name: Performance summary
      run: |
        echo "âœ… Property-based test performance benchmarks completed"
        echo "ðŸŽ¯ All agent coordination invariants verified under load"